services:
  # Frontend Swetrix (UI)
  swetrix:
    image: swetrix/swetrix-fe:v4.0.5
    restart: always
    depends_on:
      - swetrix-api
    expose:
      - "3000"
    environment:
      - API_URL=${API_URL}
    healthcheck:
      test: ["CMD-SHELL","wget --no-verbose --tries=1 --spider http://localhost:3000/ping || exit 1"]
      interval: 30s
      start_period: 15s
    networks:
      - coolify   # <-- pour que Traefik puisse router vers le front

  # Backend Swetrix (API)
  swetrix-api:
    image: swetrix/swetrix-api:v4.0.5
    restart: always
    container_name: swetrix-api
    expose:
      - "5005"
    environment:
      - SECRET_KEY_BASE=${SECRET_KEY_BASE}
      - DISABLE_REGISTRATION
      - IP_GEOLOCATION_DB_PATH
      - DEBUG_MODE
      - CLOUDFLARE_PROXY_ENABLED
      # SMTP (optionnel)
      - SMTP_HOST
      - SMTP_PORT
      - SMTP_USER
      - SMTP_PASSWORD
      - FROM_EMAIL
      - SMTP_MOCK
      # OIDC (optionnel)
      - OIDC_ENABLED
      - OIDC_ONLY_AUTH
      - OIDC_DISCOVERY_URL
      - OIDC_CLIENT_ID
      - OIDC_CLIENT_SECRET
      # Backing services
      - REDIS_HOST=redis
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - CLICKHOUSE_HOST=http://clickhouse
      - CLICKHOUSE_PASSWORD=${CLICKHOUSE_PASSWORD}
    depends_on:
      redis:
        condition: service_healthy
      clickhouse:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL","wget --no-verbose --tries=1 --spider http://localhost:5005/ping || exit 1"]
      interval: 30s
      start_period: 15s
    networks:
      - backend   # parle à redis/clickhouse
      - coolify   # exposé au proxy

  # Redis (cache/queue)
  redis:
    image: redis:8.2-alpine
    restart: always
    command: ["redis-server", "--requirepass", "${REDIS_PASSWORD}"]
    healthcheck:
      test: ["CMD-SHELL", "redis-cli -a \"$REDIS_PASSWORD\" ping | grep PONG"]
      interval: 30s
      start_period: 1m
    networks:
      - backend

  # ClickHouse (base d'événements)
  clickhouse:
    image: clickhouse/clickhouse-server:24.10-alpine
    container_name: clickhouse
    restart: always
    environment:
      - CLICKHOUSE_DATABASE=analytics
      - CLICKHOUSE_USER=default
      - CLICKHOUSE_PORT=8123
      - CLICKHOUSE_PASSWORD=${CLICKHOUSE_PASSWORD}
    healthcheck:
      test: ["CMD-SHELL","wget --no-verbose --tries=1 -O - http://127.0.0.1:8123/ping || exit 1"]
      interval: 30s
      start_period: 1m
    cap_add:
      - SYS_NICE
    volumes:
      - swetrix-events-data:/var/lib/clickhouse
      - ./clickhouse/reduce-logs.xml:/etc/clickhouse-server/config.d/reduce-logs.xml:ro
      - ./clickhouse/disable-user-logging.xml:/etc/clickhouse-server/users.d/disable-user-logging.xml:ro
      - ./clickhouse/preserve-ram-config.xml:/etc/clickhouse-server/config.d/preserve-ram-config.xml:ro
      - ./clickhouse/preserve-ram-user.xml:/etc/clickhouse-server/users.d/preserve-ram-user.xml:ro
    ulimits:
      nofile:
        soft: 262144
        hard: 262144
    networks:
      - backend

volumes:
  swetrix-events-data:
    driver: local

networks:
  backend:
    driver: bridge
  coolify:
    external: true
